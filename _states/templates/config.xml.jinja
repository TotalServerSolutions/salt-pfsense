{%- set config = pillar.get('config') -%}
{%- set zabbix_server = 'zabbix.alkivi.fr' -%}
{%- set zabbix_host = 'gateway.' ~ config.domain -%}
{%- if config.get('alkibox', False) -%}
{%- set zabbix_server = config.get('alkibox_ip') -%}
{%- endif -%}
<?xml version="1.0"?>
<pfsense>
	<version>15.8</version>
	<lastchange></lastchange>
	<system>
		<optimization>conservative</optimization>
		<hostname>gateway</hostname>
        <domain>{{ config.domain }}</domain>
		<group>
			<name>all</name>
			<description><![CDATA[All Users]]></description>
			<scope>system</scope>
			<gid>1998</gid>
		</group>
		<group>
			<name>admins</name>
			<description><![CDATA[System Administrators]]></description>
			<scope>system</scope>
			<gid>1999</gid>
			<member>0</member>
			<priv>page-all</priv>
		</group>
		<group>
			<name>ssh</name>
			<description></description>
			<scope>local</scope>
			<gid>2000</gid>
			<priv>user-shell-access</priv>
			<member>2004</member>
		</group>
		<user>
			<name>admin</name>
			<descr><![CDATA[System Administrator]]></descr>
			<scope>system</scope>
			<groupname>admins</groupname>
            <bcrypt-hash>$2b$10$13u6qwCOwODv34GyCMgdWub6oQF3RX0rG7c3d3X4JvzuEmAXLYDd2</bcrypt-hash>
			<uid>0</uid>
			<priv>user-shell-access</priv>
			<expires></expires>
			<dashboardcolumns>2</dashboardcolumns>
			<authorizedkeys>ZnJvbT0iOjpmZmZmOjE0OS4yMDIuMTg0LjEyMCwxNDkuMjAyLjE4NC4xMjAiIHNzaC1yc2EgQUFBQUIzTnphQzF5YzJFQUFBQURBUUFCQUFBQ0FRRHgza3dRdkRITm0zT2M3WlNsaGcyaEdLMkNsMTJqTzVZWnQ0U1d4N1BjS0lLWmZBQ3JkWm8rc0JaZUJrVHdaamVnYi9UZ1h5U1BnL1FQcU1WT3g3cEpCTWEvZDhkSmEzNllIS3ZrcE1FVXdqN254QklHVUJMOVlva2xBNHlVS0sxZ01DcktQZUFYVkpkMVhJVk9UaW56bHJxVnZYMVFiVWxWRmg0MUZFckZ2eXlnNGdIQTFRcFBaeHBTbFhrck9pcmVVVnBzYU1RNGQzVzI3QzhjMndhYko0NlEvOWVWNC8zT0YvRVhpcitxenZJbktnRWRKZWRuV3Q3LythcmRzNnhjMytOOHN3cXE0TTkzL1Uwb09HSTRSWVJPLzgyNWw1cWNiSHJiWXpzNDdLOUNuRG9XOE0raDNpUmVMd1dzZzhOOURqaUNzcWxiK0VrNE9wNjJYOU9oWmN4RmFmOXYrbEdFNmRDM1Q1S1Y2RnVsMjNOejArNmhlTTh3TUp0eGZJNkxGQWpLTXBqdDVaNkQ3MWFRM2l5ZmVCLzU3RjdXdzNTdEN3WjBwaDJJU1o1LzEreEVBakEwQS9MbEpsMnA3MkxvNzVGZndRT1Jnbzh5dEhQN2U5UDMyb29hUG5uOWtiTGI5b0lyUUNpakQ1M0Y2QllrTUcvUExJU29hdWtDUlpjbHE3Mm9PSHUzSUZQRGhoako5QXBlMDdYSVpneTF4UUN6b1RxQ0lVTHhVaVozNm9ITGhydmxpRklBODhGSmFhdk1Tc0ZMbm1GODhtcVZhZk9Makx5bmx3V1ZIR0o2MUdGZFZFaEtkWC95elhaeHhpQkFDWDdUbktpcGJWUGV2M1hITkRDUWIwMzlFZWU0QWFERFVURi9ObFJuajZEL25maFJmYUo5bGs4NUx3PT0ga2V5cGZzZW5zZUB6YS5hbGtpdmkuZnINCg0KZnJvbT0iOjpmZmZmOjUxLjE1LjIyMy4xNiw1MS4xNS4yMjMuMTYiIHNzaC1yc2EgQUFBQUIzTnphQzF5YzJFQUFBQURBUUFCQUFBQ0FRRFZkeSszVVhBYmZNL3VEZlZmcTA1VktWT1QxQUgzUFRvNExLVENHZGpxanBjay84QzVqOGR2ZWQ0UzUwbU0wQkRPcGx2UHJ2NHlzTlJPM0pLY0trOGZBQ05hTTM2Y3htT2RCaXZYUlk5bUdMYitMM2NENjRVaFhjREtZSGFFVmdoZE1YWmRXZFpHLzFzbG80TW40S2s3Uy9uam16NGlYejdpMkRpNjNZUFplNkNiYThkUkhQQWtCWFhhdGthdWgvTzZ6amhERG13Y01KNDA2MWgvczdPUm5tZEJUVHdpdXYxY2k2cGQ2SXNlTURLYU1ad0Z2M3Y2VjhocHQzRk1BWWNEOWl2WVZ3ZzlBOW9nQVNKaHZxdzR0b0p6c0VmU01xQXg2NCtScWxGTmhxTlcySjVibWlIOEhuVU9pelY1aWFYM3pjdG0yS3dBS1FNcG93VkNHdEFFT2R5Q04zaWZQelpSK09RNXpyWXJ6WFVpam5HTXF0eUZMbmJ3OGk5ODBJVFdqV29ZenFUVm50bHd5SU1HQjRiYnB4MExzOGpaZ1FMem5FNm94Q0ExN2MwK2Q5WG9OSDkydG5qWEl2djR5WEdMeWRDSVhNZ1ZCOW1uVFVtWjhlRFhmSUtjRlNpVHpxZ2tiN1ZnM1pXck5aSE1ZRmtjdWsrSmhlRElkYTU3aktzd3NkdFpTWXVkY2VVUHR4eUc5UDBPRkxQNFpYY2twWjZDSCsvTUZlcm9uVjV2UnZhOWN0RVFTeGlYVzE5WnRLNUorclgzRW4rd3dYQjhmSzBEMVhCM2ZURlFZMjN4Z0JZSmExaGF3WDlTRThOZmJuY3I1RDltSmFXTmNUSHVWOXlyeFh2TGRzQlpHRURkOW5zekQzMDVmTHQwbHhoa2tnUG4vUjFtbk9QSFF3PT0ga2V5cGZzZW5zZUB6Yi5hbGtpdmkuZnINCg0Kc3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFDQVFDMWhZSXQyU0Q3Nm92T01jUGxwdmZ2Y0RNMi9jK1FZNVIrNXlzd1pobUFLRFpzK0RuOHdleGZLM1E2dVBnckNaTWt3MUloYzBMYTVLcjY4Q1dvTGFvbmJuSHV3U3JXNTlqN2VhQU52TVBQVU5kR3NTdHI3bTNiRmZkUjh4RGdJVUlIVGVRQnpwR1BPVDhxRjkxOHJYa3lFNzEyZWk5UjgxSFlpWWl0SGVFNFFGa0htZlJicmF6Q0FHZU1qRDg2cG9RblM0QWlyRVFjb0lId3hJTVBqeks4U2pBcjd6U2JwRU1sUEI4VWtNNTJZWm0wemh2ZXRTR2NkenA5NFROa3QzejBBRmNXWkpsTm43RVUyZ2MwK2w1OWhpMWdFL0NMY2lSc1lIai9Kd2lQMVB3NGRzMVIvbU1DM21CeVRBVUtNV3NFK3VMOVNEYjBieHA0bE9jMG5BTmtpQnN6MHM4YUhtYTM0eEtnRjFzSTRGNmpEZ3VySURGdnRYamttTE5odlR6cE9QTGI1ODA4S0ZaYmh3UVNONVlaclRZL09CYkdML1FYMU92akUySlRYN2hIVzU4OWExRGtaUjVoUWxRU2I4Z3NCWDFScnhvejBDVWdOZGtoNGFBZGpjSHBOM1lPMzNKamZNUEx5TnZnL1VaUDZpdlYwd2Z3WVhiVkVvRmcwdWtCalBLUUhNOElBenVqU3JkNzNFV1BZWTBLUWRxTi8xaU9nL3BTSnJHbW1Gd1NGWDFiNzY5aWVFVHByUjdBcGpUZDlHNUUvbjBhSWFDdFVyV1M5NHNSaVY0WXRaRnNrTmQ0Y3FHdzdCSXZNTW1tRktpRHhZWHJWVTdzMTl0L3lWOVRXZDF0ZjZUc0JNMVk4a1dWOGxZR0orekdIVVAwcGxPOFBORjdmREtoNFE9PSBhbnRob255DQoNCnNzaC1yc2EgQUFBQUIzTnphQzF5YzJFQUFBQURBUUFCQUFBQ0FRREJBbmcrV1ZrSWs2MGs1ZG5VMmd6MXpZV0c2R2xZWm52Sk1sNld6NVFNVXI1KzdlOEdrTGo2OHJwUlFOME03cnkyNzQxWW81a2lKVDZTQWtQNFZOYkpIQzVQK2NxeXdWRVFkVGVobGV1aGtyZ01hRmVQME5IQm9SK2p3bDZNb0FXZjFLVFR0b1hmc1Y2d0ZEMFFvN0kyZ2hSNXVUU2pVNU1GRzZWdlZxaGxBQ2p1VGFjRGNBRkNRQjZtakI2T2RYUmhIcFZzUDZXV1hETkQ0dzNjYzF6RFMzeWVBNS9WNlJJZ200Z25VNU9icFZBeURVbXZvMTVqakpJRUpLT3JFT2FndGxneVVMR1NGaGt3amN2OGlRcVJ4d1AweVB4eWRHOUpjZWVsSzdLSHNHd0Uwck94NGJBaDQwUHpyL2o5Tk1CVHcyQ3Y2TTJYdmlkdUdnK1pLeEZwNklkdnJqM2tpNklBKzRud21pMlVqbEFNMUVqYk9neGkwWUcxeUJhMVN6YnBBTnd0a285Y084bk1lZno3aDVGa2xQa0NXQ0pzUDNyNVBydzZCOVI0SEc1RHQwVXY0dlc2ODd2anBMSDdPdXNUNnEzUkVtdlExaC9INThtZndwZ0NZTlRsMDlQTHUyQ1V1TEVnWS9DdkFWbDBzc09RUEhqR2NOY1hiek92N2ZWUkRRaVRuRlhkUGE2bW9FZDIrd2RKMjJBOHpnUjh3NXJPWUZNazYxYzN3MG5VUk85d3J4M1pYdUdVaXA0RzhiMHhnSDlxSzZTVGU3TW11SUhmUUQxaHNwaWtlTW1lZE5YOExVMWk3dHRPZFk0SGhkYmptWkhGbURPd0VDMFFNRGUybUdjV0N2bzVrRHVyNHduV3VrSXd6VmtoT1pnL3cwaGo5RzJPY3Iybnd3PT0gbHVjDQoNCnNzaC1yc2EgQUFBQUIzTnphQzF5YzJFQUFBQURBUUFCQUFBQ0FRRGU3LytxZVR6aFY2ak9DQXVCWUtUaWJGdnNTMkg1UEUyblBIblEvWVpKU212cW1rZE5mYjlIL05zQUR3eTBwR3JKWEJFdTY3aTEvZmgyWUxsRTVRSThSQ0xXMTM5Y2NqVG1oZ1dRKyt3Ymx3YWkrU0QySE1MNXZPbU1vZGpoK2FsSkw0NWczN3VJSExsNDFORkwyYlh4ZlJtV3doZDlxZ1RMYkNVakZoc2RpU0s2Yy9HR3c0dmYwQmdqMWp2cVA2Q3RTbmVRV2dubEI2U2JoM3hKQWpEZGxqM2dzZ0x2SW5sdjFXWGp6Nnh0bnBoWVZ4UHQ5TnZkbkdBZFlEZDFsTG14MFpnZGJkbTNjcGd5ajRYYTFROWkwQklDMjF3Z3dvM1ZmMFd2UVRUUjM3MGNCNmFJb1ZhS05PMktmUGFpNWM3bG5KSkZuc0N3MGtlYldraFBCeW9GTTczVktSaHEySXl0NmxkUk5zZjNnTEJ3YUx3dlR6bnZtQjJtS2kxemhIZDhKL04vUkJQejkxanZ1a2VoRFlIUlVrZmFGbFU2V3BCZUNMWWZuRTNKOFVVWjU3T2V0Z09UamhMbVlzcW84SllXRW5MdTFERGtETTZjNXMvZThkcTFjbzZZdUFsMWhGWHpNU2t5dGFNRjB0czltZmU4ckVkQUo5MkdIVmRVNGZza2MrUU83U1BtTVFuVVdUMTRjYjhzRlNxd28wNXU0TzhlaHMwTFE4MVQzY3A5ajZrREZja1hsdE80NlF4TDZXaUFjU0tUNk9QNFRuSThBSnJjK2lwZjRqVys0SWkxTlRVL3k5QkRVTUwrRUNSd0s0NDg5dmtUYUhZMGp0Ky9sck5WRGVhYThGK1NkVGVNT2wzOThvTUcxcE8zMGxzbml4bmIrdzlvQlFibS9RPT0gbmljb2xhcw0KDQpzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUNBUURDWWhEMXVSKzh2djlORzE1V2cvSGpaY1VUbnlvYmhZTVhheHVnaVdPZHJzLzJnREVnalp3NFEvZDRRdkpGejV0cmIza0ppNGpMaDlUbnFYb3pIdm05cEdWQUwvYzFCZkt3Y2MvbUVKRkNielo0UGJxTlZUK05SUHdHTUN6TkpPMXA1WXVoS0xzVWkxeHluNDY1dUl6UDdCWTZQRGJDL3NTWFY4eitDSklsc1pXOU9XUmxhV24vOHc1OWdYUkNUZzFhZHdiQkVSeWFqUDEzWmEwVlJUQk5QWm9wZHFIalh2cE5xZzVxc1FETGY0SlFHQUsvUE9pejNhTCtLRUpUMlorOUZ1NTJnMU9LWlo4RE1VYUcrSEJtVTVJdUtCSlRzVnJOQTd4ZkxwRjREeHNkQ1NXd05QSmJwQVJWT1lKeVU4VFp3dTVFVko2VkUrM0ROOXVrWC9hT0lsKzh4MVBON3RPaDFtNmo1OXg3WFd1MGNCQWRpQ2RFVE1ZZGNaQ2gzZTNONkhZSnY0WWFUMXdsbCtxL2srQ3EzK0VxRU5pQVBGanNQTitRckhlM2lxZTdETytMd1FmRXlGU0xxWWpTMXp2cHRlOCtBOWh0SFlpclZjWDMzQTV3N09oQ3RTZXRibDRyRElueVAxcDRzMjRLU3RWQjhNNzJDd1U1YnB4bHJOTmN0MTdPTmFWWUEwNVRMTW9OYzJrUjVFeVg3QVJRczhCVWN3K1M2NWlTd2VSZnpVSTZzUnVRSjQ1M09EVWxDMFNzTjR0U21WOEZBQjRieEYyOVczN3ZicitveU84VlhiYUdFY0xVeGErb2VSYTJEdFd1ZmRQOW1pOXl1VHd5N3htVC90emIxajBqNnhpbG0xVGNqQXZUT3djQ2tJSG9UOUpIR0lpOXBuRXBVUT09IGFkcmllbg==</authorizedkeys>
			<ipsecpsk></ipsecpsk>
			<webguicss>pfSense.css</webguicss>
		</user>
		<user>
			<scope>user</scope>
			<bcrypt-hash>$2b$10$nwbWB2tWRNbwJ2URwIM3Q.0EiapOpb2n7rPqZvUF9h7lNqVzPj.YW</bcrypt-hash>
			<descr><![CDATA[Anthony Martinet]]></descr>
			<name>anthony</name>
			<dashboardcolumns>2</dashboardcolumns>
			<expires></expires>
			<disabled></disabled>
			<webguicss>pfSense.css</webguicss>
			<uid>2000</uid>
		</user>
		<user>
			<scope>user</scope>
			<bcrypt-hash>$2b$10$FE3YYyVEgzGGz5cF4CSVtuFSF3d0KkAB0VFTHn4XJVKZ6u63pMso6</bcrypt-hash>
			<descr><![CDATA[Luc Vanwaelscappel]]></descr>
			<name>luc</name>
			<dashboardcolumns>2</dashboardcolumns>
			<expires></expires>
			<disabled></disabled>
			<webguicss>pfSense.css</webguicss>
			<uid>2001</uid>
		</user>
		<user>
			<scope>user</scope>
			<bcrypt-hash>$2b$10$C/sXIyZ.2oocZolZIJbAG.SmSOp272wTV7I6uCfQtV21d5PEfrjkO</bcrypt-hash>
			<descr><![CDATA[Nicolas Tresfield]]></descr>
			<name>nicolas</name>
			<dashboardcolumns>2</dashboardcolumns>
			<expires></expires>
			<disabled></disabled>
			<webguicss>pfSense.css</webguicss>
			<uid>2002</uid>
		</user>
		<user>
			<scope>user</scope>
			<bcrypt-hash>$2b$10$C/sXIyZ.2oocZolZIJbAG.SmSOp272wTV7I6uCfQtV21d5PEfrjkO</bcrypt-hash>
			<descr><![CDATA[Adrien Vallet]]></descr>
			<name>adrien</name>
			<dashboardcolumns>2</dashboardcolumns>
			<expires></expires>
			<disabled></disabled>
			<webguicss>pfSense.css</webguicss>
			<uid>2003</uid>
		</user>
		<user>
			<scope>user</scope>
			<bcrypt-hash>$2b$10$fGTMQ1I2U1trd2QbLbpdneofYFmmsxO1XTcc9QdOMbvcVouzKIYJi</bcrypt-hash>
			<descr><![CDATA[Alkivi Backup]]></descr>
			<name>backup</name>
			<expires></expires>
			<dashboardcolumns>2</dashboardcolumns>
			<authorizedkeys>c3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFDQVFEYnQxR3VyL1kreTBpOGZRZE90ZmtkTlBZNEI1Wmp6VzYvOCswYTlBNDdRSlRBWkhZclVCc1V1NmxHSkxOaWhRRGsyeHo5VTJ1bUZuY0srcW9QaVg2alFia1VpcXRQMG5CSVdPTVk3WVQ2SXJHSHlVbElBaUI3TU83V2hXbm9SemdIU3JKaTMweGI1MnhPbTNsZ0YrQ1FQeEVRT3pZbmpNQlhsQUxVWDJQWEIrRnZGR3BaNGxkeVFpN2VOcjdwVDg3NFJneDBuejJWSFdlT3hIVThQdkxoaDFoR01FQVk2UGVnZXMzWEc3ZUpPOTZXcmlSU1UvZk8rYUVtWjZnMXdiRkpLdGw3ekJvZTRRNndlT1BJSXJGaVlnQ2VYZXo3LzY1UXlFOE5mTlZ0MDNIY05QbzdEVkk3YWdaU0xNdkswZHc5eDdEQzZmckRDbGtyRzFCUVUzTjZKV3pSbDY0WXlEVzZpakZFUU9QTHI3NGgzSEVhcUl2ekdMdTFLYVdFby9la0ZPU3M1aEo4dkx0TCtYckE0dU12NTZLNHJhWFFjZ0ZwRXlCa29IUFdHdmo0SFphTDNoQkhqa0pFczRRNzgrb3I5Z000MHQ5VWYreEl0YnlXMlJCYm9jcE83RDR5MFNMWGN3WHoxZVc2dW5DQmVya1dSalNWeHRSNVVwK3FaaFhoam9QdGxzRVdqWm1aakRPZjhUUUlhQkQvRkFzRlhMWC9SWFcvVU90bTVxUDdpaTlyNkZIQUpPQStHZGxXcDhzbU9YYmZiYjR5Q0FiWEttYU0rcnFNYTNPazNMd3pIakFCa0RKNFMxNzZVRXlSbmYwWHpQMUpnc3A1VzdWbENwMEFpc2tJbHVGS0g5QjYwZlFmS3FDekRCTzlxbG1vL1BReVFDS0dSK2hLR1E9PSBhbGtpdmlAYWRtaW4uYWxraXZpLmZy</authorizedkeys>
			<ipsecpsk></ipsecpsk>
			<webguicss>pfSense.css</webguicss>
			<uid>2004</uid>
		</user>
		<nextuid>2005</nextuid>
		<nextgid>2001</nextgid>
		<timeservers>ntp.ovh.net</timeservers>
		<webgui>
			<protocol>https</protocol>
            <loginautocomplete></loginautocomplete>
			<ssl-certref>590315784b738</ssl-certref>
			<dashboardcolumns>2</dashboardcolumns>
            <port></port>
			<max_procs>2</max_procs>
			<webguicss>pfSense.css</webguicss>
		</webgui>
		<disablenatreflection>yes</disablenatreflection>
		<powerd_ac_mode>hadp</powerd_ac_mode>
		<powerd_battery_mode>hadp</powerd_battery_mode>
		<powerd_normal_mode>hadp</powerd_normal_mode>
		<bogons>
			<interval>monthly</interval>
		</bogons>
        <enableserial></enableserial>
		<timezone>Europe/Paris</timezone>
		<ssh>
			<sshdkeyonly>enabled</sshdkeyonly>
			<port>2203</port>
		</ssh>
		<serialspeed>115200</serialspeed>
		<enablesshd>enabled</enablesshd>
		<language>en_US</language>
		<dnsserver>208.67.220.220</dnsserver>
		<dnsserver>208.67.220.222</dnsserver>
		<dnsserver>208.67.222.220</dnsserver>
		<dnsserver>208.67.222.222</dnsserver>
		<shellcmd>/usr/local/etc/rc.d/salt_minion start</shellcmd>
		<afterfilterchangeshellcmd></afterfilterchangeshellcmd>
	</system>
	<interfaces>
       {% for name, data in config.interfaces.items() %}
       <{{ name }}>
           <enable></enable>
            <if>{{ data.if }}</if>
            {% if data.get('gateway', False) %}<gateway>{{ data.gateway }}</gateway>{% endif %}
            {% if data.get('blockpriv', False) %}<blockpriv></blockpriv>{% endif %}
            {% if data.get('blockbogons', True) %}<blockbogons></blockbogons>{% endif %}
            <descr><![CDATA[{{ data.descr }}]]></descr>
            {% if data.mode == 'dhcp' %}
            <ipaddr>dhcp</ipaddr>
            {% elif data.mode == 'static' %}
            <ipaddr>{{ data.ipaddr }}</ipaddr>
            <subnet>{{ data.subnet }}</subnet>
            {% endif %}
        </{{ name }}>
        {% endfor %}
	</interfaces>
    {% set dhcpd = config.get('dhcpd') %}
    <dhcpd>
        {% if dhcpd.get('lan', False) %}
        <lan>
            <range>
                <from>{{ dhcpd.lan.from }}</from>
                <to>{{ dhcpd.lan.to }}</to>
            </range>
			<failover_peerip></failover_peerip>
			<defaultleasetime></defaultleasetime>
			<maxleasetime></maxleasetime>
			<netmask></netmask>
			<gateway></gateway>
			<domain></domain>
			<domainsearchlist></domainsearchlist>
			<ddnsdomain></ddnsdomain>
			<ddnsdomainprimary></ddnsdomainprimary>
			<ddnsdomainkeyname></ddnsdomainkeyname>
			<ddnsdomainkey></ddnsdomainkey>
			<mac_allow></mac_allow>
			<mac_deny></mac_deny>
			<tftp></tftp>
			<ldap></ldap>
			<nextserver></nextserver>
			<filename></filename>
			<filename32></filename32>
			<filename64></filename64>
			<rootpath></rootpath>
			<numberoptions></numberoptions>
			<enable></enable>
			<dhcpleaseinlocaltime></dhcpleaseinlocaltime>
        </lan>
        {% endif %}
        {% if 'others' in dhcpd %}
        {% for name, data in dhcpd.others.items() %}
        <{{ name }}>
            <range>
                <from>{{ data.from }}</from>
                <to>{{ data.to }}</to>
            </range>
			<failover_peerip></failover_peerip>
			<defaultleasetime></defaultleasetime>
			<maxleasetime></maxleasetime>
			<netmask></netmask>
			<gateway></gateway>
			<domain></domain>
			<domainsearchlist></domainsearchlist>
			<ddnsdomain></ddnsdomain>
			<ddnsdomainprimary></ddnsdomainprimary>
			<ddnsdomainkeyname></ddnsdomainkeyname>
			<ddnsdomainkey></ddnsdomainkey>
			<mac_allow></mac_allow>
			<mac_deny></mac_deny>
			<tftp></tftp>
			<ldap></ldap>
			<nextserver></nextserver>
			<filename></filename>
			<filename32></filename32>
			<filename64></filename64>
			<rootpath></rootpath>
			<numberoptions></numberoptions>
			<enable></enable>
			<dhcpleaseinlocaltime></dhcpleaseinlocaltime>
        </{{ name }}>
        {% endfor %}
        {% endif %}
    </dhcpd>
	<snmpd>
		<syslocation></syslocation>
		<syscontact></syscontact>
		<rocommunity>public</rocommunity>
	</snmpd>
    <syslog>
        <reverse></reverse>
    </syslog>
	<nat>
		<outbound>
			<mode>automatic</mode>
		</outbound>
        {% if config.get('alkibox', False) %}
		<rule>
			<source>
				<any></any>
			</source>
			<destination>
				<network>wanip</network>
				<port>2202</port>
			</destination>
			<protocol>tcp</protocol>
            <target>{{ config.get('alkibox_ip') }}</target>
			<local-port>2202</local-port>
			<interface>wan</interface>
			<descr><![CDATA[Alkibox SSH]]></descr>
			<associated-rule-id>nat_5911958ad93240.72042023</associated-rule-id>
			<updated>
				<time>1494324618</time>
				<username>Alkivi Generator</username>
			</updated>
			<created>
				<time>1494324618</time>
				<username>Alkivi Generator</username>
			</created>
		</rule>
		<rule>
			<source>
				<any></any>
			</source>
			<destination>
				<network>wanip</network>
				<port>2202</port>
			</destination>
			<protocol>tcp</protocol>
            <target>{{ config.get('alkibox_ip') }}</target>
			<local-port>2202</local-port>
			<interface>opt1</interface>
			<descr><![CDATA[Alkibox SSH]]></descr>
			<associated-rule-id>nat_5911959b301230.36091600</associated-rule-id>
			<updated>
				<time>1494324635</time>
				<username>Alkivi Generator</username>
			</updated>
			<created>
				<time>1494324635</time>
				<username>Alkivi Generator</username>
			</created>
		</rule>
		<separator></separator>
        {% endif %}
	</nat>
    {% set f_config = config.get('filter') %}
    <filter>
        {% set count = 1 %}
        {% for iface in f_config.wan_interfaces %}
        {% set count = count + 1 %}
        <rule>
            <id></id>
            <tracker>14865489{{ count }}0</tracker>
            <type>pass</type>
            <interface>{{ iface }}</interface>
            <ipprotocol>inet</ipprotocol>
			<tag></tag>
			<tagged></tagged>
			<max></max>
			<max-src-nodes></max-src-nodes>
			<max-src-conn></max-src-conn>
			<max-src-states></max-src-states>
			<statetimeout></statetimeout>
			<statetype>keep state</statetype>
			<os></os>
            <protocol>icmp</protocol>
            <source>
                <any></any>
            </source>
            <destination>
                <network>{{ iface }}ip</network>
            </destination>
            <descr><![CDATA[Ping]]></descr>
            <updated>
                <time>1486548918</time>
                <username>Alkivi Generator</username>
            </updated>
            <created>
                <time>1486548918</time>
                <username>Alkivi Generator</username>
            </created>
        </rule>
        <rule>
			<id></id>
            <tracker>14865489{{ count }}1</tracker>
            <type>pass</type>
            <interface>{{ iface }}</interface>
            <ipprotocol>inet</ipprotocol>
			<tag></tag>
			<tagged></tagged>
			<max></max>
			<max-src-nodes></max-src-nodes>
			<max-src-conn></max-src-conn>
			<max-src-states></max-src-states>
			<statetimeout></statetimeout>
			<statetype>keep state</statetype>
			<os></os>
            <protocol>tcp</protocol>
            <source>
                <any></any>
            </source>
            <destination>
                <network>{{ iface }}ip</network>
                <port>2203</port>
            </destination>
            <descr><![CDATA[SSH Pfsense]]></descr>
            <updated>
                <time>1486548940</time>
                <username>Alkivi Generator</username>
            </updated>
            <created>
                <time>1486548940</time>
                <username>Alkivi Generator</username>
            </created>
        </rule>
        {% if not config.get('alkibox', False) %}
        <rule>
            <id/>
            <tracker>1486551490</tracker>
            <type>pass</type>
            <interface>{{ iface }}</interface>
            <ipprotocol>inet</ipprotocol>
			<tag></tag>
			<tagged></tagged>
			<max></max>
			<max-src-nodes></max-src-nodes>
			<max-src-conn></max-src-conn>
			<max-src-states></max-src-states>
			<statetimeout></statetimeout>
			<statetype>keep state</statetype>
			<os></os>
            <protocol>tcp</protocol>
            <source>
                <any></any>
            </source>
            <destination>
                <network>{{ iface }}ip</network>
                <port>10050</port>
            </destination>
            <descr><![CDATA[Zabbix]]></descr>
            <updated>
                <time>1486551490</time>
                <username>Alkivi Generator</username>
            </updated>
            <created>
                <time>1486551490</time>
                <username>Alkivi Generator</username>
            </created>
        </rule>
        {% endif %}
        <rule>
            <descr><![CDATA[OpenVPN]]></descr>
            <direction>in</direction>
            <source>
                <any></any>
            </source>
            <destination>
                <network>{{ iface }}ip</network>
                <port>1194</port>
            </destination>
            <interface>{{ iface }}</interface>
            <protocol>udp</protocol>
            <type>pass</type>
            <enabled>on</enabled>
            <created>
                <time>1486551410</time>
                <username>Alkivi Generator</username>
            </created>
        </rule>
        {% endfor %}
        {% if config.get('alkibox', False) %}
		<rule>
			<source>
				<any></any>
			</source>
			<interface>wan</interface>
			<protocol>tcp</protocol>
			<destination>
                <address>{{ config.get('alkibox_ip') }}</address>
				<port>2202</port>
			</destination>
			<descr><![CDATA[NAT Alkibox SSH]]></descr>
			<associated-rule-id>nat_5911958ad93240.72042023</associated-rule-id>
			<tracker>1494324618</tracker>
			<created>
				<time>1494324618</time>
				<username>NAT Port Forward</username>
			</created>
		</rule>
		<rule>
			<source>
				<any></any>
			</source>
			<interface>opt1</interface>
			<protocol>tcp</protocol>
			<destination>
                <address>{{ config.get('alkibox_ip') }}</address>
				<port>2202</port>
			</destination>
			<descr><![CDATA[NAT Alkibox SSH]]></descr>
			<associated-rule-id>nat_5911959b301230.36091600</associated-rule-id>
			<tracker>1494324635</tracker>
			<created>
				<time>1494324635</time>
				<username>NAT Port Forward</username>
			</created>
		</rule>
        {% endif %}
        {% for iface in f_config.lan_interfaces %}
        <rule>
            <type>pass</type>
            <ipprotocol>inet</ipprotocol>
            <descr><![CDATA[Default allow {{ iface }} to any rule]]></descr>
            <interface>{{ iface }}</interface>
            <tracker>0100000101</tracker>
            <source>
                <network>{{ iface }}</network>
            </source>
            <destination>
                <any/>
            </destination>
        </rule>
        <rule>
            <descr><![CDATA[OpenVPN]]></descr>
            <source>
                <any/>
            </source>
            <destination>
                <any/>
            </destination>
            <interface>openvpn</interface>
            <type>pass</type>
            <enabled>on</enabled>
            <created>
                <time>1486551410</time>
                <username>Alkivi Generator</username>
            </created>
        </rule>
        {% endfor %}
        <separator>
            {% for iface in f_config.wan_interfaces %}
            <{{ iface }}>
                <sep0>
                    <row>fr0</row>
                    <text><![CDATA[Alkivi]]></text>
                    <color>bg-info</color>
                    <if>{{ iface }}</if>
                </sep0>
                <sep1>
                    <row>fr3</row>
                    <text><![CDATA[VPN]]></text>
                    <color>bg-info</color>
                    <if>{{ iface }}</if>
                </sep1>
            </{{ iface }}>
            {% endfor %}
        </separator>
    </filter>
	<shaper></shaper>
	<ipsec></ipsec>
	<aliases></aliases>
	<proxyarp></proxyarp>
	<cron>
		<item>
			<minute>1,31</minute>
			<hour>0-5</hour>
			<mday>*</mday>
			<month>*</month>
			<wday>*</wday>
			<who>root</who>
			<command>/usr/bin/nice -n20 adjkerntz -a</command>
		</item>
		<item>
			<minute>1</minute>
			<hour>3</hour>
			<mday>1</mday>
			<month>*</month>
			<wday>*</wday>
			<who>root</who>
			<command>/usr/bin/nice -n20 /etc/rc.update_bogons.sh</command>
		</item>
		<item>
			<minute>*/60</minute>
			<hour>*</hour>
			<mday>*</mday>
			<month>*</month>
			<wday>*</wday>
			<who>root</who>
			<command>/usr/bin/nice -n20 /usr/local/sbin/expiretable -v -t 3600 sshlockout</command>
		</item>
		<item>
			<minute>*/60</minute>
			<hour>*</hour>
			<mday>*</mday>
			<month>*</month>
			<wday>*</wday>
			<who>root</who>
			<command>/usr/bin/nice -n20 /usr/local/sbin/expiretable -v -t 3600 webConfiguratorlockout</command>
		</item>
		<item>
			<minute>1</minute>
			<hour>1</hour>
			<mday>*</mday>
			<month>*</month>
			<wday>*</wday>
			<who>root</who>
			<command>/usr/bin/nice -n20 /etc/rc.dyndns.update</command>
		</item>
		<item>
			<minute>*/60</minute>
			<hour>*</hour>
			<mday>*</mday>
			<month>*</month>
			<wday>*</wday>
			<who>root</who>
			<command>/usr/bin/nice -n20 /usr/local/sbin/expiretable -v -t 3600 virusprot</command>
		</item>
		<item>
			<minute>30</minute>
			<hour>12</hour>
			<mday>*</mday>
			<month>*</month>
			<wday>*</wday>
			<who>root</who>
			<command>/usr/bin/nice -n20 /etc/rc.update_urltables</command>
		</item>
	</cron>
	<wol></wol>
	<rrd>
		<enable></enable>
	</rrd>
	<load_balancer>
		<monitor_type>
			<name>ICMP</name>
			<type>icmp</type>
			<descr><![CDATA[ICMP]]></descr>
			<options></options>
		</monitor_type>
		<monitor_type>
			<name>TCP</name>
			<type>tcp</type>
			<descr><![CDATA[Generic TCP]]></descr>
			<options></options>
		</monitor_type>
		<monitor_type>
			<name>HTTP</name>
			<type>http</type>
			<descr><![CDATA[Generic HTTP]]></descr>
			<options>
				<path>/</path>
				<host></host>
				<code>200</code>
			</options>
		</monitor_type>
		<monitor_type>
			<name>HTTPS</name>
			<type>https</type>
			<descr><![CDATA[Generic HTTPS]]></descr>
			<options>
				<path>/</path>
				<host></host>
				<code>200</code>
			</options>
		</monitor_type>
		<monitor_type>
			<name>SMTP</name>
			<type>send</type>
			<descr><![CDATA[Generic SMTP]]></descr>
			<options>
				<send></send>
				<expect>220 *</expect>
			</options>
		</monitor_type>
	</load_balancer>
	<widgets>
        <sequence>system_information:col1:open,interfaces:col2:open,gateways:col2:open,traffic_graphs:col2:open</sequence>
        <period>10</period>
	</widgets>
	<openvpn></openvpn>
	<dnshaper></dnshaper>
	<unbound>
		<dnssec></dnssec>
		<active_interface>all</active_interface>
		<outgoing_interface>all</outgoing_interface>
		<custom_options></custom_options>
		<hideidentity></hideidentity>
		<hideversion></hideversion>
		<dnssecstripped></dnssecstripped>
		<port></port>
		<system_domain_local_zone_type>transparent</system_domain_local_zone_type>
	</unbound>
	<revision>
		<time>1486552025</time>
		<description><![CDATA[admin@10.1.161.100: System: ]]></description>
		<username>admin@10.1.161.100</username>
	</revision>
	<cert>
		<refid>590315784b738</refid>
		<descr><![CDATA[webConfigurator default (590315784b738)]]></descr>
		<type>server</type>
		<crt>LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZiVENDQkZXZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBRENCdERFTE1Ba0dBMVVFQmhNQ1ZWTXgKRGpBTUJnTlZCQWdUQlZOMFlYUmxNUkV3RHdZRFZRUUhFd2hNYjJOaGJHbDBlVEU0TURZR0ExVUVDaE12Y0daVApaVzV6WlNCM1pXSkRiMjVtYVdkMWNtRjBiM0lnVTJWc1ppMVRhV2R1WldRZ1EyVnlkR2xtYVdOaGRHVXhLREFtCkJna3Foa2lHOXcwQkNRRVdHV0ZrYldsdVFIQm1VMlZ1YzJVdWJHOWpZV3hrYjIxaGFXNHhIakFjQmdOVkJBTVQKRlhCbVUyVnVjMlV0TlRrd016RTFOemcwWWpjek9EQWVGdzB4TnpBME1qZ3hNREV5TURoYUZ3MHlNakV3TVRreApNREV5TURoYU1JRzBNUXN3Q1FZRFZRUUdFd0pWVXpFT01Bd0dBMVVFQ0JNRlUzUmhkR1V4RVRBUEJnTlZCQWNUCkNFeHZZMkZzYVhSNU1UZ3dOZ1lEVlFRS0V5OXdabE5sYm5ObElIZGxZa052Ym1acFozVnlZWFJ2Y2lCVFpXeG0KTFZOcFoyNWxaQ0JEWlhKMGFXWnBZMkYwWlRFb01DWUdDU3FHU0liM0RRRUpBUllaWVdSdGFXNUFjR1pUWlc1egpaUzVzYjJOaGJHUnZiV0ZwYmpFZU1Cd0dBMVVFQXhNVmNHWlRaVzV6WlMwMU9UQXpNVFUzT0RSaU56TTRNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE0QlNZM0JpcVhQWWIxTm84eDJRbG44TEoKMFdZMG10bytyVnZvcmt5RThFZHI2Zy83eElIek5hWDBxMUVaTlBadGVEd1RyVDExR1FmbGlBRDA4WEY2Q3U4VQpZNVFzTURtTDJhMlE0dTBFVDFHTS9BUElpeDJRQUxFa2R2ZUhUTGRVdkV4SVpKRll5Yy9lWHVFeGhHRXFDNC9iClZzNHpXTUtiQmd3Z28rLzRidUttT0t5TGlGMGFXbkU5YWpKdmwvQkh1eDZndlBxby9PbU5JRUkzdDdQSnlMRXEKbWlmUm5rZE1hczdoVUlGU1l1SGlSMGJTNlZmdGIrZTA3KzNoUlZzbk5pbmxHbjRMU0c1Sng0OGxzSDJhdXpqNwpPcmRPU3BvUXQ5bzdkK2s1b0xMam1Mblp6NFV4dUl6NElhc0FSQ1hFbE5VcXh6SHhCbElvS1ZFVTVxY2VhUUlECkFRQUJvNElCaGpDQ0FZSXdDUVlEVlIwVEJBSXdBREFSQmdsZ2hrZ0JodmhDQVFFRUJBTUNCa0F3TXdZSllJWkkKQVliNFFnRU5CQ1lXSkU5d1pXNVRVMHdnUjJWdVpYSmhkR1ZrSUZObGNuWmxjaUJEWlhKMGFXWnBZMkYwWlRBZApCZ05WSFE0RUZnUVU1VjBIaFdBWmZnV2Y3QlBERjVWa1RYNE5HRUl3Z2VFR0ExVWRJd1NCMlRDQjFvQVU1VjBICmhXQVpmZ1dmN0JQREY1VmtUWDROR0VLaGdicWtnYmN3Z2JReEN6QUpCZ05WQkFZVEFsVlRNUTR3REFZRFZRUUkKRXdWVGRHRjBaVEVSTUE4R0ExVUVCeE1JVEc5allXeHBkSGt4T0RBMkJnTlZCQW9UTDNCbVUyVnVjMlVnZDJWaQpRMjl1Wm1sbmRYSmhkRzl5SUZObGJHWXRVMmxuYm1Wa0lFTmxjblJwWm1sallYUmxNU2d3SmdZSktvWklodmNOCkFRa0JGaGxoWkcxcGJrQndabE5sYm5ObExteHZZMkZzWkc5dFlXbHVNUjR3SEFZRFZRUURFeFZ3WmxObGJuTmwKTFRVNU1ETXhOVGM0TkdJM016aUNBUUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQ0FJQwpNQXNHQTFVZER3UUVBd0lGb0RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXNzTGtmQ2pCRUc3dWJLSk1TNkk3Ck1kWGEwdE93TEJGNFpFeGVjTGJ0UDZEYzJjeVlQZDU4N3BaZHNiV3JzR2V4SXk2dXFSZldsUHB6aDNTWnVmbW8KT1dUOWh1WHIvUE1VK0xqR0h4UGI4Tkw4VFJubmFBYmxna3ZlRFVMYWJkM3NXQkpBM2ZZNmZ5QUJlQlhKdWh4bApOZk16enV6eHZnQ0FWYWFQNGM2S2svemNxTVJiQkVEYXdndldWKzJUbU5KS3pOcE8wTjFiWEJDOVVmTStaSHhuCkNNYzJaM1ZNSVlUVkI5MXFmQUEwOGRtV2dpai83WEFrbUdyZHpKOU54V2o3cVRRY081YlQwWWt3cllGRTZSYTEKemVDVis4czJNb1JIVlRwMk1vN0V6ZE5XWGJoV01kQ01TbE44aFB1MFA3MTFOWUlzTEcwOGE3SWU0ZlhYS3p6Ngo3Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K</crt>
		<prv>LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRGdGSmpjR0twYzlodlUKMmp6SFpDV2Z3c25SWmpTYTJqNnRXK2l1VElUd1IydnFEL3ZFZ2ZNMXBmU3JVUmswOW0xNFBCT3RQWFVaQitXSQpBUFR4Y1hvSzd4UmpsQ3d3T1l2WnJaRGk3UVJQVVl6OEE4aUxIWkFBc1NSMjk0ZE10MVM4VEVoa2tWakp6OTVlCjRUR0VZU29Majl0V3pqTll3cHNHRENDajcvaHU0cVk0ckl1SVhScGFjVDFxTW0rWDhFZTdIcUM4K3FqODZZMGcKUWplM3M4bklzU3FhSjlHZVIweHF6dUZRZ1ZKaTRlSkhSdExwVisxdjU3VHY3ZUZGV3ljMktlVWFmZ3RJYmtuSApqeVd3ZlpxN09QczZ0MDVLbWhDMzJqdDM2VG1nc3VPWXVkblBoVEc0alBnaHF3QkVKY1NVMVNySE1mRUdVaWdwClVSVG1weDVwQWdNQkFBRUNnZ0VBTmVSK1J5RWZpREFnelhhWGU1VVlmMjRIdi9jRzI5OTFoNWc5US81ZlVySzYKdjVhTWhOeUVNL2p2K1d3TjFmRVdydjR6OVV4OHAwS0E3ODdiR2w2aWJaTEdvcFIyZERyQzZkMldwUjFBRmh1VQovdCtpRWVOUVNQcFJ2Tk1YbFZuYVpWY3JhaFNTK0Nhb1lzVmlkV1l4Q0lyV3crL2Y1WThZWGNINDc3UzlXVjF5ClFPWVpMN1g0QTBBMkpCR01sRVZqOXhEbnZSNGFoQjgvdG52d0tyNTdHbUxCNmlPNTIxTzkyTitJV1hKMk9YK2UKNWRqemF0dDF4ZXhWTkwzK1hKREFQcmNPV0ViajhqYUkxRFBDbklCUDRFSnNzSkpWZ1hhRlE1eVlVTnpLdkpRcgpJYS9uR1JKZlBLdTZReTNORS9vN0tnNDl1Z0hRcVRXMlVycFRhOVdab1FLQmdRRDJDU251dmYyalVYVURZTkQ2CmZBTmQ5TUZ4cGc4WjBSeEIrS0JZNGtES2dFdmZJYUdzQm1Ma2cramloM2FvaDNpTy9FaUtxZUVueUx6Nmx2NFEKOFh5T0ZScUFFdUkrUlQwcXFNSkF1L2ZjcGVvd3lJd051TDhJMDRtdjVPZmNubnllUnh4ZXJCTlgyclBGL2QveApFUGx3clJFdU5odGpYdDY0RkFzcTErNlQ5UUtCZ1FEcEo4NVVVdGszYWNnUmp0dnc1OHBZNUhZM0pSNHNqR2ttCmpQUDZOTDZPT2l1Wmk3bzNxMXN0aFFsaHo0WnVCaEI2TjJpTDhpd1ZQeSsrbGRMQmdaWjQ2aHdrc1AwRTlveFIKUXl3R1B3WWNKUy9xbHBEa0Q1ajdEeENXUlNBSXNVZ2IxeEpnRUdzT21qUG4vNXNjS2c1OVdXYkRiTDh4K0V1bgpUQ0J0SCtOTUpRS0JnUUR5N0hGZXJIQjJoTU1JSnR1dnRpcU01bERwcVpCWGFVU0JUcjdqZytGOUQ5Zlo1QmNCCkJ2MDFxNWlSc2piU2g0L2RmZk1TRmxHZE9uSjg2Z0RKTWVaTlUwRHJHN29PeWNadkRGbGdHVGZOd0hQTzN2U0oKeDlPM0gwWmZTYUExRUxieWdEdmVyZ0FiU25FZUdHQzRZSTRwVm5nVUxKQTJPVUdtZHdQZnRYeDIwUUtCZ0RmQgpSUjMxRWV5bVp5bUx1QnpMMFIrZ3dvUTlaQkhUSWZJT0V1bnFZd2N2OGUwdDlNSUxRQ3FLZmN2ZURJK1M4NjNHClFrSDFENFdsTG8yczFsRmY0OVBXYUJSK0hvTnBVZlM4MDNKSzcvTWJFWEpQdnlaS2RKTFU3MnAvN1VFbTQ4K0UKaHVoaUJMZmhPRGhxYjNVMHVYSlFScnJFN3BQTWhJcmxNWHZtL0R2aEFvR0JBSjlSWHZUU2RqN3hzdVR4YkR4RApYazFmOVhuM1ViZzNZSkNub0RpTDNlOE1mRXlpcGVQZkIzQzYwQUthejNNeENyMzZQWUdNdGZ1Q25uWEppTTNKCmdOMVQwUzVqcU1FRGxjR3J3T2t0OThwR25ITmh1NHF1TGdTaGV0T1JzSmlVbnRxc241bm5rUFJvK04rMVdzTkYKMFllcGFuVmhHWUdXWjR1NzFpUHR6ak96Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K</prv>
	</cert>
	<dnsmasq>
		<enable></enable>
		<custom_options></custom_options>
		<interface></interface>
	</dnsmasq>
    {%- if config.get('gateways', False) %}
	<gateways>
   {% for name, data in config.get('gateways', {}).items() %}
		<gateway_item>
            <name>{{ name }}</name>
			<weight>1</weight>
			<descr></descr>
            <interface>{{ data.interface }}</interface>
			<ipprotocol>inet</ipprotocol>
            <gateway>{{ data.gateway }}</gateway>
            <monitor>{{ data.monitor }}</monitor>
		</gateway_item>
        {% endfor %}
    </gateways>
    {% else %}
    <gateways/>
    {% endif %}
	<ovpnserver>
		<step1>
			<type>local</type>
		</step1>
		<step6>
            <certca>{{ config.readable_name }} CA</certca>
			<keylength>2048</keylength>
			<lifetime>3650</lifetime>
			<country>FR</country>
			<state>Nord</state>
			<city>Lille</city>
			<organization>Alkivi</organization>
			<email>admin@alkivi.fr</email>
			<uselist>on</uselist>
		</step6>
		<step9>
            <certname>{{ config.readable_name }} Server</certname>
			<keylength>2048</keylength>
			<lifetime>3650</lifetime>
			<country>FR</country>
			<state>Nord</state>
			<city>Lille</city>
			<organization>Alkivi</organization>
			<email>admin@alkivi.fr</email>
			<uselist>on</uselist>
		</step9>
		<step10>
			<interface>wan</interface>
			<protocol>UDP</protocol>
			<localport>1194</localport>
			<tlsauth>on</tlsauth>
			<gentlskey>on</gentlskey>
			<dhkey>2048</dhkey>
			<crypto>AES-256-CBC</crypto>
			<digest>SHA1</digest>
			<engine>none</engine>
            <tunnelnet>{{ config.get('vpn_network') }}</tunnelnet>
            <localnet>{{ config.local_network }}{% if config.get('voip_network', False) %},{{ config.voip_network }}{% endif %}</localnet>
			<dynip>on</dynip>
			<addrpool>on</addrpool>
			<topology>subnet</topology>
			<nbttype>0</nbttype>
		</step10>
		<step11>
			<ovpnrule>off</ovpnrule>
			<ovpnallow>off</ovpnallow>
		</step11>
	</ovpnserver>
	<vlans>
       {% for name, data in config.get('vlans', {}).items() %}
		<vlan>
            <if>{{ data.if }}</if>
            <tag>{{ data.tag }}</tag>
            <descr><![CDATA[{{ data.descr }}]]></descr>
            <vlanif>{{ data.if }}_vlan{{ data.tag }}</vlanif>
		</vlan>
        {% endfor %}
	</vlans>
	<ppps></ppps>
	<installedpackages>
		<package>
			<name>Zabbix Agent LTS</name>
			<internal_name>zabbix-agent</internal_name>
			<descr><![CDATA[LTS (Long Term Support) release of Zabbix Monitoring agent. Zabbix LTS releases are supported for 
			Zabbix customers during five (5) years i.e. 3 years of Full Support (general, critical and security issues) 
			and 2 additional years of Limited Support (critical and security issues only). Zabbix LTS version release 
			will result in change of the first version number.&lt;br /&gt;
			More info in &lt;a href=&quot;http://www.zabbix.com/life_cycle_and_release_policy.php&quot;&gt;Zabbix Life Cycle and Release Policy&lt;/a&gt;.]]></descr>
			<website>http://www.zabbix.com/product.php</website>
			<version>0.8.9_3</version>
			<configurationfile>zabbix-agent-lts.xml</configurationfile>
			<tabs>
				<tab>
					<text><![CDATA[Agent]]></text>
					<url>/pkg_edit.php?xml=zabbix-agent-lts.xml&amp;id=0</url>
					<active></active>
				</tab>
			</tabs>
		</package>
		<package>
			<name>Shellcmd</name>
			<descr><![CDATA[The shellcmd utility is used to manage commands on system startup.]]></descr>
			<version>1.0.3</version>
			<configurationfile>shellcmd.xml</configurationfile>
			<include_file>/usr/local/pkg/shellcmd.inc</include_file>
		</package>
		<package>
			<name>OpenVPN Client Export Utility</name>
			<internal_name>openvpn-client-export</internal_name>
			<descr><![CDATA[Allows a pre-configured OpenVPN Windows Client or Mac OS X's Viscosity configuration bundle to be exported directly from pfSense.]]></descr>
			<version>1.4.3</version>
			<configurationfile>openvpn-client-export.xml</configurationfile>
			<tabs>
				<tab>
					<name>Client Export</name>
					<tabgroup>OpenVPN</tabgroup>
					<url>/vpn_openvpn_export.php</url>
				</tab>
				<tab>
					<name>Shared Key Export</name>
					<tabgroup>OpenVPN</tabgroup>
					<url>/vpn_openvpn_export_shared.php</url>
				</tab>
			</tabs>
		</package>
		<menu>
			<name>Zabbix Agent LTS</name>
			<section>Services</section>
			<url>/pkg_edit.php?xml=zabbix-agent-lts.xml&amp;id=0</url>
		</menu>
		<menu>
			<name>Shellcmd</name>
			<section>Services</section>
			<configfile>shellcmd.xml</configfile>
			<url>/pkg.php?xml=shellcmd.xml</url>
		</menu>
		<service>
			<name>zabbix_agentd_lts</name>
			<rcfile>zabbix_agentd_lts.sh</rcfile>
			<executable>zabbix_agentd</executable>
			<description><![CDATA[Zabbix Agent LTS Host Monitor Daemon]]></description>
		</service>
		<zabbixagentlts>
			<config>
				<agentenabled>on</agentenabled>
                <server>{{ zabbix_server }}</server>
                <serveractive>{{ zabbix_server }}</serveractive>
                <hostname>{{ zabbix_host }}</hostname>
				<listenip>0.0.0.0</listenip>
				<listenport>10050</listenport>
				<refreshactchecks>120</refreshactchecks>
				<timeout>3</timeout>
				<buffersend>5</buffersend>
				<buffersize>100</buffersize>
				<startagents>3</startagents>
				<tlsconnect>unencrypted</tlsconnect>
				<tlsaccept>unencrypted</tlsaccept>
				<tlscafile>none</tlscafile>
				<tlscaso></tlscaso>
				<tlscrlfile>none</tlscrlfile>
				<tlscertfile>none</tlscertfile>
				<tlspskidentity></tlspskidentity>
				<tlspskfile></tlspskfile>
				<userparams></userparams>
			</config>
		</zabbixagentlts>
		<shellcmdsettings>
			<config>
				<cmd>/usr/local/etc/rc.d/salt_minion start</cmd>
				<cmdtype>shellcmd</cmdtype>
				<description><![CDATA[salt minion]]></description>
			</config>
		</shellcmdsettings>
	</installedpackages>
</pfsense>
